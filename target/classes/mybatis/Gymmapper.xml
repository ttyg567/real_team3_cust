<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kbstar.mapper.GymMapper">

    <!-- insert-->
    <insert id="insert" parameterType="gym">
        INSERT INTO Gym (
            gymNo,
            gymMasterCk,
            gymEmail,
            gymPwd,
            gymName,
            gymPhone,
            gymZipcode,
            gymAddress1,
            gymAddress2,
            gymAddress3,
            gymRegiimgname,
            gymReginumber,
            gymTitle,
            gymContents,
            gymMarketing,
            Status,
            approvedAdmID
        )
        VALUES (
                   #{gymNo},
                   #{gymMasterCk},
                   #{gymEmail},
                   #{gymPwd},
                   #{gymName},
                   #{gymPhone},
                   #{gymZipcode},
                   #{gymAddress1},
                   #{gymAddress2},
                   #{gymAddress3},
                   #{gymRegiimgname},
                   #{gymReginumber},
                   #{gymTitle},
                   #{gymContents},
                   #{gymMarketing},
                   #{Status},
                   #{approvedAdmID}
               )
    </insert>
    <!-- UPDATE -->
    <update id="update" parameterType="gym">
        UPDATE Gym
        SET
            gymMasterCk = #{gymMasterCk},
            gymEmail = #{gymEmail},
            gymPwd = #{gymPwd},
            gymName = #{gymName},
            gymPhone = #{gymPhone},
            gymZipcode = #{gymZipcode},
            gymAddress1 = #{gymAddress1},
            gymAddress2 = #{gymAddress2},
            gymAddress3 = #{gymAddress3},
            gymRegiimgname = #{gymRegiimgname},
            gymReginumber = #{gymReginumber},
            gymTitle = #{gymTitle},
            gymContents = #{gymContents},
            gymMarketing = #{gymMarketing},
            Status = #{Status},
            approvedAdmID = #{approvedAdmID}
        WHERE
            gymNo = #{gymNo}
    </update>

    <!-- DELETE -->
    <delete id="delete" parameterType="int">
        DELETE FROM Gym
        WHERE
            gymNo = #{gymNo}
    </delete>

    <!-- SELECT -->
<!--    <select id="select" parameterType="String" resultType="gym">-->
<!--        SELECT * FROM Gym WHERE gymEmail=#{gymEmail}-->
<!--    </select>-->
    <select id="select" parameterType="Integer" resultType="gym">
        SELECT * FROM Gym WHERE gymNo=#{gymNo}
    </select>
    <select id="selectall" resultType="gym">
        SELECT * FROM gym WHERE gymMasterCk ='1'
    </select>
    <!-- SELECT BY typeNo 운동종목으로 select 하기  -->
<!--    <select id="selectByTypeNo" parameterType="int" resultType="gym">-->
<!--        SELECT * FROM Gym-->
<!--        WHERE-->
<!--            typeNo = #{typeNo}-->
<!--    </select>-->
    <select id="selectByTypeNo" parameterType="Integer" resultType="gym">
        SELECT t.*
        FROM (
                 SELECT g.gymNo, g.gymName, g.gymPhone, g.gymAddress1, g.gymAddress2, g.gymAddress3, g.gymTitle, gi.gymImgname,
                        RANK() OVER (PARTITION BY g.gymNo ORDER BY gi.gymImgNo) AS rank
                 FROM Gym g
                          JOIN GymImg gi ON g.gymNo = gi.gymNo
                 WHERE gi.gymImgdetailCk = '0' AND g.typeNo = #{typeNo}
             ) t
        WHERE t.rank = 1
    </select>
    <!--    1: 헬스                workout                             wo-->
<!--    2: PT.                  personalTraining.         pt-->
<!--    3: 크로스핏       crossfit.                              cr-->
<!--    4: 요가                yoga.                                    yo-->
<!--    5: 필라테스       pilates.                                pi-->
<!--    6: 골프                golf.                                       go-->
<!--    7: 수영               swimming                          sw-->
    <!--  헬스장만 조회하기  -->
    <select id="selectWorkout" parameterType="int" resultType="gym">
        SELECT g.gymNo,g.gymName, g.gymPhone,
               g.gymZipcode, g.gymAddress1, g.gymAddress2, g.gymAddress3,
               g.gymTitle, g.gymContents, g.gymMarketing

        FROM Gym g
                 JOIN Gymtype gt ON g.gymNo = gt.gymNo
        WHERE gt.typeNo = 1
    </select>
    <select id="selectimg" parameterType="Integer" resultType="gym">
        SELECT gymNo,gymImgname, gymImgdetailCk
        FROM
            GymImg
        WHERE gymNo = #{gymNo}
        AND gymMasterCk = '1'
    </select>
    <select id="selectListImg" parameterType="Integer" resultType="gym">
        select t.*

        from ( SELECT g.gymNo, g.gymName, g.gymPhone, g.gymAddress1, g.gymAddress2,  g.gymAddress3, g.gymTitle, gi.gymImgname,
                      rank()over (partition by g.gymNo order by gi.gymImgNo) as rank
               From Gym g
                        Join GymImg gi on g.gymNo = gi.gymNo
               WHERE gi.gymImgdetailCk = '0' ) t

        where t.rank = 1
    </select>
    <select id="selectMarketing" resultType="gym">
        SELECT
            G.gymNo,
            G.gymName,
            G.gymPhone,
            G.gymAddress1,
            G.gymAddress2,
            G.gymAddress3,
            G.gymTitle,
            G.gymMarketing,
            G.Status,
            G.approvedAdmID,
            MIN(GI.gymImgname) AS gymImgname
        FROM
            Gym G
                INNER JOIN gymImg GI ON G.gymNo = GI.gymNo
        WHERE
            G.gymMarketing = '1'
        GROUP BY
            G.gymNo,
            G.gymName,
            G.gymPhone,
            G.gymAddress1,
            G.gymAddress2,
            G.gymAddress3,
            G.gymTitle,
            G.gymMarketing,
            G.Status,
            G.approvedAdmID;
    </select>
    <select id="selectTicketsWithDiscount" resultType="ticket">
        SELECT
            ticketNo,
            gymNo,
            ticketType,
            ticketMonth,
            ticketNumber,
            ticketJoin,
            ticketTotal,
            ticketSales,
            ticketCost,
            ticketDiscount,
            ticketPrice,
            ticketImgname,
            sportsType,
            sportsClasstype
        FROM
            Ticket
        WHERE
            ticketDiscount IS NOT NULL
    </select>
    <!--  인보.조인 개설 시 센터를 검색해서 가져오기 위해 조회조건 추가  -->
    <select id="search" parameterType="gymSearch" resultType="gym">
        SELECT * FROM gym
        <where>
            <if test="gymName != null and !gymName.equals('') ">
                AND gymName LIKE '%'||#{gymName}||'%'
            </if>
        </where>
    </select>
</mapper>