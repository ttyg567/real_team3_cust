spring.security.oauth2.client.registration.google.client-id =670183604542-1g5sqim5v5utgu47keh2gu0jhnulnt8t.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret =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
spring.security.oauth2.client.registration.google.scope = profile, email

# 유의 리다이렉트 uri는 로컬 호스트라고 쓰지 말 것!!!!!!!!!!!!!!!!!! 나중에 ip 바꺼주기!
spring.security.oauth2.client.registration.google.redirect-uri=http://127.0.0.1/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name

# openid라는 scope가 있으면 Open Id Provider로 인식한다.
# OpenId Provider에는 구글, 깃허브, 페이스북, 옥타가 있다.
# 이렇게 되면 OpenId Provider인 구글과 그렇지않은 서비스(네이버, 카카오)로 나눠 각각 OAuth2Service를 만들어야한다.
# 하나의 OAuth2Service를 사용하기 위해 scope를 명시하였다.